from abc import ABC , abstractmethod
import csv
import os
import openpyxl


class Gestor_archivos(ABC):

    @abstractmethod
    def cargar_archivo(archivo):
        path = archivo
        path, extension = os.path.splitext(path)
        a = open(archivo)

        if extension == '.txt':
            Gestor_archivos_txt.extraer_informacion(a)

        elif extension == '.csv':
            Gestor_archivos_csv.extraer_informacion(a)

        elif extension == '.xlsx':
            a = openpyxl.load_workbook(archivo)
            Gestor_archivos_xlsx.extraer_informacion(a)

        elif extension == '.xml':
            Gestor_archivos_xml.extraer_informacion(a)

        else:
            print("No se pudo leer archivo de personas")

        
    @abstractmethod
    def extraer_informacion():
        pass


class Gestor_archivos_txt(Gestor_archivos):
    
    def extraer_informacion(archivo):
        next(archivo)
        data = archivo.read()
        lista_visitantes = data.replace('\n', ' ').split(" ")
        new_lista_visitantes =[]
        for visitante in lista_visitantes:
            visit = visitante.split("\t")
            new_lista_visitantes.append(visit)
        for visitante in new_lista_visitantes:
            Visitante(visitante[0], visitante[1], visitante[2], visitante[3])

class Gestor_archivos_xlsx(Gestor_archivos):
    
    def extraer_informacion(archivo):
        data = archivo.active
        lista_visitantes = []
        for i in range(2, data.max_row):
            for col in range(0, data.max_column):
                lista_visitantes.append([data[i][col].value, data[i][col+1].value, data[i][col+2].value, data[i][col+3].value])
        print(lista_visitantes)


    

class Gestor_archivos_csv(Gestor_archivos):
    
    def extraer_informacion(archivo):
        lista_visitantes = []
        reader = csv.reader(archivo)
        first = True
        for row in reader:
            if first:
                first = False
                continue
            lista_visitantes.append(row)

        new_lista_visitantes = []
        for visitante in lista_visitantes:
            if len(visitante) == 1:
                visit = visitante[0].split('**')
                new_lista_visitantes.append(visit)
            else:
                Visitante(visitante[0], visitante[1], visitante[2], visitante[3])

        if new_lista_visitantes != 0:
            for visitante in new_lista_visitantes:
                Visitante(visitante[0], visitante[1], visitante[2], visitante[3])

        # if len(new_lista_visitantes) == 0:
        #     return lista_visitantes
        # elif len(new_lista_visitantes) > 20:
        #     return new_lista_visitantes

class Gestor_archivos_xml(Gestor_archivos):
    
    def extraer_informacion(archivo):
        pass


class Evento():
    def __init__(self, taquillero):
        self.__taquillero = taquillero
        self.__lista_invitados = []

    def generar_lista_invitados(gestor:Gestor_archivos):
        gestor

    def set_Taquillero(nombre, id, email, edad):
        Taquillero(nombre, id, email, edad)


class Persona:
    def __init__(self, nombre, id, email, edad):
        self.__nombre = nombre
        self.__edad = edad
        self.__email = email
        self.__id = id

    def get_nombre(self):
        return self.__nombre

    def get_id(self):
        return self.__id

    def get_email(self):
        return self.__email
    
    def get_edad(self):
        return self.__edad


class Visitante(Persona):
    def __init__(self, nombre, id, email, edad):
        super().__init__(nombre, id, email, edad)


class Validacion_visitante:

    def validar(evento:Evento, visitante):
        pass

class Taquillero(Persona):
    def __init__(self, nombre, id, email, edad):
        super().__init__(nombre, id, email, edad)

    def validar_visitante(self, validador:Validacion_visitante, visitante:Visitante):
        pass


Gestor_archivos.cargar_archivo("Taller_herencia.xlsx")
Evento.set_Taquillero("Luisa", 10115112, "luisarroyave43@gmail.com", 20)
